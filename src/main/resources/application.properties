spring.application.name=api-gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.main.allow-bean-definition-overriding=true
io.netty.resolver.dns.macos.useNative=false
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

spring.cloud.loadbalancer.ribbon.enabled=false

spring.cloud.gateway.routes[0].id=data-microservice
spring.cloud.gateway.routes[0].uri=lb://DATA-MICROSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/data/**,/api/categories/**

spring.cloud.gateway.routes[1].id=greenhouse-microservice
spring.cloud.gateway.routes[1].uri=lb://GREENHOUSE-MICROSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/greenhouse/**


spring.cloud.gateway.default-filters=TokenRelay

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/mycompany-microservice-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-boot-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=H2EpvweeduY6hASBViTZojUhvbxGunGR
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-boot-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.scope=openid

